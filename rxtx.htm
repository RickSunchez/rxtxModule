 <script type="text/javascript">
 	var CTX, 
 		H, W, 
 		rxtx = [], service = [],
 		SX, SY, 
 		onMove = false, onField = false,
 		newRXTX, mainModule, findModule, field,
 		setArea, 
 		setSpeed, 
 		action = "ADD_POINT";

 	window.onload = () => {
 		let canvas = document.getElementById("canvas");
 		W = document.body.offsetWidth - 300;
 		H = document.body.offsetHeight;

 		canvas.width = W;
 		canvas.height = H;
 		CTX = canvas.getContext("2d");

 		setArea = 300,
		setSpeed = 8;

		mainModule = new rxtxModule(0, 100, H - 100, setArea, setSpeed, "Find me!", "main");
		findModule = new rxtxModule(0, W - 100, 100, setArea, setSpeed, "Find me!", "passive");

 		setInterval(update, 20);
 	}
 	window.onmousedown = () => {
 		SX = event.clientX;
 		SY = event.clientY;
 		
 		if (SX > W || SY > H) return false;
 		onMove = true;

		switch (action) {
 			case "ADD_POINT": 
 				newRXTX = new rxtxModule(0, SX, SY, setArea, setSpeed, "I'm module!", "normal");
 				newRXTX.draw();
 				break;
 			case "ADD_PASSIVE":
 				findModule.x = SX;
 				findModule.y = SY;
 				break;
 			case "ADD_MAIN":
 				mainModule.x = SX;
 				mainModule.y = SY;
 				break;
 			case "ADD_SERVICE":
 				newRXTX = new rxtxModule(0, SX, SY, setArea, setSpeed, "", "service");
 				newRXTX.draw();
 				break;
 		}
 	}
 	window.onmousemove = () => {
 		if (!onMove) return false;

 		switch (action) {
 			case "ADD_SERVICE":
 			case "ADD_POINT": 
 				newRXTX.x = event.clientX;
 				newRXTX.y = event.clientY;
 				break;
 			case "ADD_PASSIVE":
 				findModule.x = event.clientX;
 				findModule.y = event.clientY;
 				break;
 			case "ADD_MAIN":
 				mainModule.x = event.clientX;
 				mainModule.y = event.clientY;
 				break;
 		}
 		
 	}
 	window.onmouseup = () => {
 		if (SX > W || SY > H) return false;

 		onMove = false;
 		if (action == "ADD_POINT") {
 			rxtx.push(newRXTX);
 		}
 		if (action == "ADD_SERVICE") {
 			service.push(newRXTX);
 		}

 		delete newRXTX;
 	}
 	window.onkeydown = () => {
 		if (event.keyCode == 17) action = "ADD_PASSIVE"; //CTRL
 		if (event.keyCode == 16) action = "ADD_SERVICE"; //SHIFT
 		if (event.keyCode == 88) action = "ADD_MAIN"; //X
 	}
 	window.onkeyup = () => {
 		action = "ADD_POINT"
 	}


 	function update() {
 		clearCanvas();

 		field = rxtx.concat(service, findModule, mainModule);

 		field.map(function(module) {
 			module.draw();
 			if (module.TXon) module.tx();
 			if (module.RXon) module.rx();
 		})

 		if (newRXTX) newRXTX.draw();
 	}

 	function clearCanvas() {
 		CTX.clearRect(0,0, W, H);
 	}

 	function rxtxModule(ID, x,y, area, speed, text, type){
 		this.ID = ID ? ID : parseInt(Math.random()*99999);
 		this.x = x ? x : 0;
 		this.y = y ? y : 0;
 		this.maxArea = area ? area : 500;
 		this.speed = speed ? speed : 1;
 		this.text = text ? text : "default";
 		this.t = type;
 		this.RXon = false;
 		this.TXon = false;

 		this.getTX = () => {return currentTX;}


 		let r = 5,
 			currentTX = r;

 		this.draw = () => {
 			CTX.beginPath();
 				if (this.t == "normal") CTX.fillStyle = "#FF5C6F";
 				if (this.t == "passive") CTX.fillStyle = "#FE60ED";
 				if (this.t == "service") CTX.fillStyle = "#000000";
 				if (this.t == "main") CTX.fillStyle = "#00CF00";
 				
 				CTX.arc(this.x, this.y, r, 0, 2*Math.PI, true);
 				CTX.fill();

				CTX.font = "10px Courier";
				CTX.fillText(this.ID, this.x + r, this.y - r);
 			CTX.closePath();
 		}

 		this.tx = (text) => {
 			CTX.beginPath();
 				CTX.strokeStyle = "#00FF05";
 				CTX.arc(this.x, this.y, currentTX, 0, 2*Math.PI, true);
 				CTX.stroke();
 			CTX.closePath();
 			currentTX = (currentTX >= this.maxArea) ? r : (currentTX + this.speed);
 			if (this.t == "service") {
 				this.text = this.ID + ":" + this.x + ":" + this.y;
 			}
 			else {
 				this.text = text ? text : this.text;
 			}
 		}

 		this.rx = () => {
 			let x = this.x,
 				y = this.y,
 				ID = this.ID;

 			field.map(function(module) {
	 			if (module.ID == ID) return false;

	 			let dx = Math.pow((x - module.x), 2),
	 				dy = Math.pow((y - module.y), 2),
	 				dr = Math.pow((r - module.getTX()), 2)

	 			if ((dx + dy) < dr) {
	 				console.log(module.text);
	 				RXcommand(module.text);
	 			}
	 		})
 		}
 	}

 	function RXcommand(command) {

 	}

 	function drawService(obj) {
 		let mapPts = [];

 		let dH_count = Math.ceil((H-100) / 250),
 			dW_count = Math.ceil((W-100) / 250),
 			dH = parseInt((H-100) / dH_count),
 			dW = parseInt((W-100) / dW_count);

 		for (let i=0; i<=dW*dW_count; i+=dW) {
 			for (let j=0; j<=dH*dH_count; j+=dH) {
 				if (i==0 || i==dW*dW_count) {
 					mapPts.push([i+50,j+50]);
 				}
 				else if (j==0 || j==dH*dH_count) {
 					mapPts.push([i+50,j+50]);
 				}
 				
 			}
 		}

 		mapPts.map(function(pt){
 			service.push(new rxtxModule(0, pt[0],pt[1], setArea, setSpeed, "", "service"))
 		})
 		
 		obj.disabled = true;
 	}

 	function drawNormal(obj) {
 		let mapPts = JSON.parse('[[151,835],[222,829],[234,760],[299,736],[363,694],[373,623],[446,603],[505,539],[455,495],[533,456],[618,439],[640,357],[707,354],[709,278],[777,271],[841,270],[862,220],[928,192],[916,141],[991,136],[1064,132],[1040,258],[900,418],[892,373],[781,502],[906,573],[1000,469],[750,684],[570,751],[909,781],[775,798],[283,572],[145,630],[150,516],[169,354],[271,449],[411,362],[444,245],[562,278],[666,190],[567,157],[736,106],[796,175],[373,143],[268,217],[343,287],[532,352],[634,600],[679,726],[461,729],[405,832],[565,863],[871,688],[1045,666],[1034,559],[1100,412],[985,337]]');

 		mapPts.map(function(pt){
 			rxtx.push(new rxtxModule(0, pt[0]*(W/1184),pt[1], setArea, setSpeed, "", "normal"))
 		})

 		obj.disabled = true;
 	}
 </script>
 <style type="text/css">
 	* {
 		margin: 0px;
 		padding: 0px;
 	}
 	#canvas {
 		float: left;
 	}
 	#legend {
 		width: 300px;
 		height: 100vh;
 		background-color: #C3C3C3;
 		float: left;
 	}
 	button {
 		width: 100%;
 		height: 75px;
 		border: none;
 		background-color: #5CFF5F;
 	}
 	button:hover {
 		background-color: #FFFFFF;
 	}
 </style>
 <body>
 	<canvas id="canvas"></canvas>
 	<div id="legend">
 		<button onclick="mainModule.TXon = mainModule.TXon ? false : true">mainStart()</button>
 		<button onclick="drawService(this)">drawService()</button>
 		<button onclick="drawNormal(this);">drawNormal()</button>
 	</div>
 </body>